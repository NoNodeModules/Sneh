{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/ubuntu-files/sneh-2/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebase from \"firebase\";\nvar config = {\n  databaseURL: \"https://sneh-33f7d-default-rtdb.firebaseio.com\",\n  projectId: \"sneh-33f7d\"\n};\nfirebase.initializeApp(config);\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      name: '',\n      age: '',\n      email: '',\n      symptoms: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, React.createElement(\"h1\", {\n        className: \"string\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, \"What's your name?\"), React.createElement(\"input\", {\n        value: this.state.name,\n        type: \"text\",\n        id: \"name\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            name: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }), React.createElement(\"h1\", {\n        className: \"string\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, \"How old are you?\"), React.createElement(\"input\", {\n        value: this.state.age,\n        onChange: function onChange(e) {\n          _this2.setState({\n            age: e.target.value\n          });\n        },\n        type: \"text\",\n        id: \"age\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }), React.createElement(\"h1\", {\n        className: \"string\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, \"What is your email?\"), React.createElement(\"input\", {\n        value: this.state.email,\n        onChange: function onChange(e) {\n          _this2.setState({\n            email: e.target.value\n          });\n        },\n        type: \"text\",\n        id: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }), React.createElement(\"h1\", {\n        className: \"string\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"What are your symptoms?\"), React.createElement(\"input\", {\n        value: this.state.symptoms,\n        onChange: function onChange(e) {\n          _this2.setState({\n            symptoms: e.target.value\n          });\n        },\n        type: \"text\",\n        id: \"symptoms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }), React.createElement(\"h1\", {\n        className: \"string\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"Hi \", this.state.name, \"! Your data has been recorded and our representative will shortly message you!\"), \"write(\", this.state.name, \", \", this.state.age, \", \", this.state.email, \", \", this.state.symptoms, \")\");\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 17\n  }\n}), document.getElementById('Root'));\n\nfunction write(email, fname, lname) {\n  firebase.database().ref('UsersList/').push({\n    email: email,\n    fname: fname,\n    lname: lname\n  }).then(function (data) {\n    console.log('data ', data);\n  }).catch(function (error) {\n    console.log('error ', error);\n  });\n}","map":{"version":3,"sources":["/ubuntu-files/sneh-2/App.js"],"names":["StatusBar","React","firebase","config","databaseURL","projectId","initializeApp","App","state","name","age","email","symptoms","e","setState","target","value","Component","ReactDOM","render","document","getElementById","write","fname","lname","database","ref","push","then","data","console","log","catch","error"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport firebase from \"firebase\";\n\nvar config = {\n  databaseURL: \"https://sneh-33f7d-default-rtdb.firebaseio.com\",\n  projectId: \"sneh-33f7d\",\n};\nfirebase.initializeApp(config);\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={name: '', age: '', email: '', symptoms: ''}\n  }\n  render() {\n    return (\n      <div className =\"wrap\">\n          <h1 className=\"string\">What's your name?</h1>\n          <input value={this.state.name} type=\"text\" id=\"name\" onChange={(e)=>{this.setState({name: e.target.value})}}/>\n          <h1 className=\"string\">How old are you?</h1>\n          <input  value={this.state.age} onChange={(e)=>{this.setState({age: e.target.value})}} type=\"text\" id=\"age\" />\n          <h1 className=\"string\">What is your email?</h1>\n          <input  value={this.state.email} onChange={(e)=>{this.setState({email: e.target.value})}} type=\"text\" id=\"email\" />\n          <h1 className=\"string\">What are your symptoms?</h1>\n          <input  value={this.state.symptoms} onChange={(e)=>{this.setState({symptoms: e.target.value})}} type=\"text\" id=\"symptoms\" />\n          <h1 className=\"string\">Hi {this.state.name}! Your data has been recorded and our representative will shortly message you!</h1>\n          write({this.state.name}, {this.state.age}, {this.state.email}, {this.state.symptoms})\n       </div>\n    )\n  }\n}\n\nReactDOM.render(<App/>, document.getElementById('Root'))\n\nfunction write(email,fname,lname){\n  firebase.database().ref('UsersList/').push({\n      email,\n      fname,\n      lname\n  }).then((data)=>{\n      //success callback\n      console.log('data ' , data)\n  }).catch((error)=>{\n      //error callback\n      console.log('error ' , error)\n  })\n}"]},"metadata":{},"sourceType":"module"}